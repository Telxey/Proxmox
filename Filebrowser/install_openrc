#!/usr/bin/env bash

function header_info {
    clear
    cat <<"EOF"
    _______ __     ____
   / ____(_) /__  / __ )_________ _      __________  _____
  / /_  / / / _ \/ __  / ___/ __ \ | /| / / ___/ _ \/ ___/
 / __/ / / /  __/ /_/ / /  / /_/ / |/ |/ (__  )  __/ /
/_/   /_/_/\___/_____/_/   \____/|__/|__/____/\___/_/

EOF
}

IP=$(hostname -I | awk '{print $1}')
YW=$(echo "\033[33m")
BL=$(echo "\033[36m")
RD=$(echo "\033[01;31m")
BGN=$(echo "\033[4;92m")
GN=$(echo "\033[1;92m")
DGN=$(echo "\033[32m")
CL=$(echo "\033[m")
BFR="\\r\\033[K"
HOLD="-"
CM="${GN}âœ“${CL}"
APP="FileBrowser"
hostname="$(hostname)"

header_info

if [ -f /root/filebrowser.db ]; then
    read -r -p "Would you like to uninstall ${APP} on $hostname? <y/N> " prompt
    if [[ "${prompt,,}" =~ ^(y|yes)$ ]]; then
        /etc/init.d/filebrowser stop
        rc-update delete filebrowser
        rm -rf /usr/local/bin/filebrowser /root/filebrowser.db /etc/init.d/filebrowser
        echo "$APP Removed"
        sleep 2
        clear
        exit
    else
        clear
        exit
    fi
fi

while true; do
    read -p "This will install ${APP} on $hostname. Proceed (y/n)? " yn
    case $yn in
    [Yy]*) break ;;
    [Nn]*) exit ;;
    *) echo "Please answer yes or no." ;;
    esac
done

header_info

function msg_info() {
    local msg="$1"
    echo -ne " ${HOLD} ${YW}${msg}..."
}

function msg_ok() {
    local msg="$1"
    echo -e "${BFR} ${CM} ${GN}${msg}${CL}"
}

read -r -p "Would you like to use No Authentication? <y/N> " prompt

msg_info "Installing ${APP}"
apt-get install -y curl &>/dev/null
curl -fsSL https://raw.githubusercontent.com/filebrowser/get/master/get.sh | bash

if [[ "${prompt,,}" =~ ^(y|yes)$ ]]; then
    filebrowser config init -a '0.0.0.0' &>/dev/null
    filebrowser config set -a '0.0.0.0' &>/dev/null
    filebrowser config init --auth.method=noauth &>/dev/null
    filebrowser config set --auth.method=noauth &>/dev/null
    filebrowser users add ID 1 --perm.admin &>/dev/null  
else
    filebrowser config init -a '0.0.0.0' &>/dev/null
    filebrowser config set -a '0.0.0.0' &>/dev/null
    filebrowser users add admin admin --perm.admin &>/dev/null
fi

msg_ok "Installed ${APP} on $hostname"

msg_info "Creating Service"
cat <<EOF >/etc/init.d/filebrowser
#!/sbin/openrc-run

command=/usr/local/bin/filebrowser
command_args="-r /"
pidfile=/run/filebrowser.pid

depend() {
    after net
}

start_pre() {
    checkpath --directory --mode 0755 /run
}

start() {
    ebegin "Starting ${APP}"
    start-stop-daemon --start --make-pidfile --pidfile ${pidfile} --background --exec ${command} -- ${command_args}
    eend \$?
}

stop() {
    ebegin "Stopping ${APP}"
    start-stop-daemon --stop --pidfile ${pidfile}
    eend \$?
}
EOF

# Ensure the service script is executable
chmod +x /etc/init.d/filebrowser

# Add the service to the default runlevel
rc-update add filebrowser default
msg_ok "Created Service"

msg_ok "Completed Successfully!\n"
echo -e "${APP} should be reachable by going to the following URL.\n         ${BL}$IP:8080${CL} \n"
