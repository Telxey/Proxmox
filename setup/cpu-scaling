#!/usr/bin/env bash

# Copyright (c) 2023-2024 TELXEY
# Author: Telxey ( Rax )
# License: MIT
# https://raw.githubusercontent.com/Telxey/Proxmox/main/LICENSE

WT=$(echo "\033[97m")
LBL=$(echo "\033[38;5;33m")
OR=$(echo "\033[38;5;208m")
RD=$(echo "\033[01;31m")
YW=$(echo "\033[33m")
GN=$(echo "\033[1;92m")
GRN=$(echo "\033[32m")
CL=$(echo "\033[m")
DM=$(echo "\e[2m")
BLD=$(echo "\033[1m")
BFR="\\r\\033[K"
HOLD="-"
CM="${GN}✓${CL}"
CROSS="${RD}✗${CL}"


# Run as root only
check_root() {
  if [[ "$(id -u)" -ne 0 || $(ps -o comm= -p $PPID) == "sudo" ]]; then
    clear
    msg_error "Please run this script as root."
    echo -e "\nExiting..."
    sleep 2
    exit
  fi
}

msg_ok() {
  local msg="$1"
  echo -e "${BFR} ${CM} ${GN}${msg}${CL}"
}

set -e
header_info() {
clear
echo -e "${BLD}${LBL}"
cat <<EOF
    ░▒█▀▀▄░▒█▀▀█░▒█░▒█░░░▒█▀▀█░▄▀▀▄░▄░░░▄░█▀▀░█▀▀▄░█▀▀▄░▄▀▀▄░█▀▀▄
    ░▒█░░░░▒█▄▄█░▒█░▒█░░░▒█░▄▄░█░░█░░█▄█░░█▀▀░█▄▄▀░█░▒█░█░░█░█▄▄▀
    ░▒█▄▄▀░▒█░░░░░▀▄▄▀░░░▒█▄▄▀░░▀▀░░░░▀░░░▀▀▀░▀░▀▀░▀░░▀░░▀▀░░▀░▀▀


EOF
}
header_info
echo -e "${CL}${DM}${WT}Author:${CL} ${WT}(${LBL}${BLD}Rax${WT}) ${CL}${DM}${WT}From ${GN}${BLD}TELXEY"
echo -e "${GN} Today is: ${WT} `date` "
echo -e "${OR}${BLD}Do you wish to continue install CPU Performance Scaling${CL}${GN}${BLD} ?${CL}"
echo -e "${WT}For continue press --> ${GN}${BLD} 1 ${WT}${BLD} or  ${WT}For cancel press --> ${RD}${BLD} 2 ${CL}"
select yn in "Yes" "No"; do
    case $yn in
        Yes ) $@; break;;
        No ) echo -e "${RD}CPU Performance Scaling Instalation Canceled by ROOT${CL}";  exit;;
    esac
done

check_root

whiptail --backtitle "Proxmox VE Helper Scripts" --title "CPU Scaling Governors" --yesno "View/Change CPU Scaling Governors. Proceed?" 10 58 || exit
current_governor=$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor)
GOVERNORS_MENU=()
MSG_MAX_LENGTH=0
while read -r TAG ITEM; do
  OFFSET=2
  ((${#ITEM} + OFFSET > MSG_MAX_LENGTH)) && MSG_MAX_LENGTH=${#ITEM}+OFFSET
  GOVERNORS_MENU+=("$TAG" "$ITEM " "OFF")
done < <(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors | tr ' ' '\n' | grep -v "$current_governor")
scaling_governor=$(whiptail --backtitle "Proxmox VE Helper Scripts" --title "Current CPU Scaling Governor is set to $current_governor" --checklist "\nSelect the Scaling Governor to use:\n" 16 $((MSG_MAX_LENGTH + 58)) 6 "${GOVERNORS_MENU[@]}" 3>&1 1>&2 2>&3 | tr -d '"') || exit
[ -z "$scaling_governor" ] && {
    whiptail --backtitle "Proxmox VE Helper Scripts" --title "No CPU Scaling Governor Selected" --msgbox "It appears that no CPU Scaling Governor was selected" 10 68
    clear
    exit
}
echo "${scaling_governor}" | tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor >/dev/null
current_governor=$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor)
whiptail --backtitle "Proxmox VE Helper Scripts" --msgbox --title "Current CPU Scaling Governor" "\nCurrent CPU Scaling Governor has been set to $current_governor\n" 10 60
CHOICE=$(whiptail --backtitle "Proxmox VE Helper Scripts" --title "CPU Scaling Governor" --menu "This will establish a crontab to maintain the CPU Scaling Governor configuration across reboots.\n \nSetup a crontab?" 14 68 2 \
  "yes" " " \
  "no" " " 3>&2 2>&1 1>&3)

case $CHOICE in
  yes)
    set +e
    NEW_CRONTAB_COMMAND="(sleep 60 && echo \"$current_governor\" | tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor)"
    EXISTING_CRONTAB=$(crontab -l 2>/dev/null)
    if [[ -n "$EXISTING_CRONTAB" ]]; then
      TEMP_CRONTAB_FILE=$(mktemp)
      echo "$EXISTING_CRONTAB" | grep -v "@reboot (sleep 60 && echo*" > "$TEMP_CRONTAB_FILE"
      crontab "$TEMP_CRONTAB_FILE"
      rm "$TEMP_CRONTAB_FILE"
    fi
    (crontab -l 2>/dev/null; echo "@reboot $NEW_CRONTAB_COMMAND") | crontab -
    echo -e "\nCrontab Set (use 'crontab -e' to check)"
    ;;
  no)
    echo -e "\n\033[31mNOTE: Settings return to default after reboot\033[m\n"
    ;;
esac
echo -e "Current CPU Scaling Governor is set to \033[36m$current_governor\033[m\n"
msg_ok "Crontab ready Set"
msg_ok "Installed $CPU Scaling Governor"
